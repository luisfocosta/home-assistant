- alias: 'Phone Charging Test'
  trigger:
  - platform: state
    entity_id: sensor.tracys_iphone_battery_state
    to: 'Charging'
  action:
  - service: notify.pushbullet_notifications
    data_template:
      message: "Tracys phone is on the charger"
      target:
      - !secret pauls_secret_email
      title: "Testing of iPhone Charging"
#############################################
## HA Actions for health, etc              ##
#############################################
- alias: Heal zwave network
  trigger:
    platform: time
    at: '3:30:00'
  action:
    service: zwave.heal_network

- alias: Battery Alert
  trigger:
   
    - platform: time
      at: '09:55:00'
    - platform: time
      at: '19:55:00'

  condition:
    - condition: template
      value_template: >
        {%- set threshold_high = 45 -%}
        {%- set threshold_low = 0 -%}
        {% macro battery_level() %}
        {% set domains = ['light', 'switch', 'zwave', 'lock', 'sensor'] %}
        {% for domain in domains -%}
        {% for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold_high and item.attributes['battery_level'] | int > threshold_low) or ("battery" in item.name | lower and ((item.state | int < threshold_high and item.state | int > threshold_low and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
        {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold_high and item.attributes['battery_level'] | int > threshold_low) -%}
        {{ item.name }}{% endif -%}
        {% if "battery" in item.name | lower and ((item.state | int < threshold_high and item.state | int > threshold_low and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
        {{ item.name }}{% endif -%}
        {% endfor %}
        {%- endfor %}
        {% endmacro %}
        {{ battery_level() |trim != "" }}

  action:
    - service: persistent_notification.create
      data_template:
        title: "Low Battery Levels"
        notification_id: low-battery-alert
        message: >
          {%- set threshold_high = 45 -%}
          {%- set threshold_low = 0 -%}
          {% macro battery_level(domain) %}
          {%- for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold_high and item.attributes['battery_level'] | int > threshold_low) or ("battery" in item.name | lower and ((item.state | int < threshold_high and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold_high and item.attributes['battery_level'] | int > threshold_low) -%}
          {{ item.name }} ({{ item.attributes['battery_level'] }}){%- if not loop.last %}, {% endif -%}{%- endif -%}
          {%- if "battery" in item.name | lower and ((item.state | int < threshold_high and item.state | int > threshold_low and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}){% if not loop.last %}, {% endif %}{% endif -%}
          {%- endfor -%}
          {% endmacro %}
          {%- set domains = ['light', 'switch', 'zwave', 'lock'] -%}
          {%- for domain in domains if battery_level(domain) |trim != ""-%}
          {{ battery_level(domain) }}{%- if not loop.last %}, {% endif -%}
          {%- endfor -%}
    - service: notify.ios_pauls_iphone
      data_template:
            title: "HOME devices have low battery levels:"
            message: >
              {%- set threshold_high = 45 -%}
              {%- set threshold_low = 0 -%}
              {% macro battery_level(domain) %}
              {%- for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold_high and item.attributes['battery_level'] | int > threshold_low) or ("battery" in item.name | lower and ((item.state | int < threshold_high and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
              {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold_high and item.attributes['battery_level'] | int > threshold_low) -%}
              {{ item.name }} ({{ item.attributes['battery_level'] }}){%- if not loop.last %}, {% endif -%}{%- endif -%}
              {%- if "battery" in item.name | lower and ((item.state | int < threshold_high and item.state | int > threshold_low and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
              {{ item.name }} ({{ item.state }}){% if not loop.last %}, {% endif %}{% endif -%}
              {%- endfor -%}
              {% endmacro %}
              {%- set domains = ['light', 'switch', 'zwave', 'lock', 'sensor'] -%}
              {%- for domain in domains if battery_level(domain) |trim != ""-%}
              {{ battery_level(domain) }}{%- if not loop.last %}, {% endif -%}
              {%- endfor -%}

- alias: Battery Alert Clear
  trigger:
    - platform: time
      minutes: '/30'
      seconds: 00
  condition:
    - condition: template
      value_template: >
        {%- set threshold_high = 45 -%}
        {%- set threshold_low = 0 -%}
        {% macro battery_level() %}
        {% set domains = ['light', 'switch', 'sensor', 'zwave', 'lock'] %}
        {% for domain in domains -%}
        {% for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold_high and item.attributes['battery_level'] | int > threshold_low) or ("battery" in item.name | lower and ((item.state | int < threshold_high and item.state | int > threshold_low and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
        {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold_high and item.attributes['battery_level'] | int > threshold_low) -%}
        {{ item.name }}{% endif -%}
        {% if "battery" in item.name | lower and ((item.state | int < threshold_high and item.state | int > threshold_low and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
        {{ item.name }}{% endif -%}
        {% endfor %}
        {%- endfor %}
        {% endmacro %}
        {{ battery_level() |trim == "" }}
  action:
    - service: persistent_notification.dismiss
      data:
        notification_id: low-battery-alert

#############################################
## 4 Button Controller Buttons Settings ##
#############################################
- alias: 'Minimote 1 Actions'
  trigger:
  - platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.aeotec_minimote_1
  action:
  - service: homeassistant.toggle
    data_template:
      entity_id: >
        {% set map = {1: 'light.bedroom_lamp_one',
                      2: 'light.bedroom_lamp_one',
                      3: 'light.bedroom_lamp_two',
                      4: 'light.bedroom_lamp_two',
                      5: 'light.bedroom_ceiling_light',
                      6: 'light.bedroom_ceiling_light',
                      7: 'switch.bedroom_fan',
                      9: 'switch.bedroom_fan'} %}
        {{ map[trigger.event.data.scene_id|int] }}

- alias: 'Minimote 2 Actions'
  trigger:
  - platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.aeotec_minimote_2
  action:
  - service: homeassistant.toggle
    entity_id: light.guest_bedroom_lamp

##########################################
## Setting House Mode based on Presence ##
##########################################
- alias: Home Mode - Leaving
  trigger:
  - platform: state
    entity_id: binary_sensor.people_home
    to: 'off'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  - condition: state
    entity_id: input_select.house_mode
    state: 'Home'   
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: 'Away'
  - delay:
      seconds: 60
  - service: input_select.select_option
    entity_id: input_select.security_system
    data:
      option: 'Armed (Away)'

- alias: Home Mode - Arriving
  trigger:
   - platform: state
     entity_id:
       - input_boolean.paul_present
       - input_boolean.tracy_present
       - input_boolean.guests_present
     to: 'on'
   - platform: state
     entity_id:
       - device_tracker.paul
       - device_tracker.pauls_iphone
       - device_tracker.pauls_iphone_2
       - device_tracker.tracy
       - device_tracker.tracys_iphone
       - device_tracker.tracys_iphone_2
       - group.extra_device_trackers
     to: 'home'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  - condition: state
    entity_id: input_select.house_mode
    state: 'Away'
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: 'Home'
  - service: input_select.select_option
    entity_id: input_select.security_system
    data:
      option: 'Disarmed'

#############################################################
## House as Extended away to be used for other automations ##
#############################################################
- alias: Mark house as extended away
  trigger:
  - platform: state
    entity_id: binary_sensor.people_home
    to: 'off'
    for:
      hours: 24
  action:
  - service: input_select.select_option
    data_template:
      entity_id: input_select.house_mode
      option: Extended Away

##########################################
## Just Arrived timers used for stuff   ##
##########################################
- alias: Paul Just Arrived Timer
  trigger:
   - platform: state
     entity_id:
       - input_boolean.paul_present
     to: 'on'
   - platform: state
     entity_id:
       - device_tracker.paul
       - device_tracker.pauls_iphone
       - device_tracker.pauls_iphone_2
     to: 'home'
  condition:
  - condition: or
    conditions:
      - condition: state
        entity_id: binary_sensor.paul_presence
        state: 'off'  
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.binary_sensor.paul_presence.last_changed)) < 60 }}"
  action:
  - service: timer.start
    entity_id: timer.paul_just_arrived

- alias: Tracy just Arrived Timer
  trigger:
   - platform: state
     entity_id:
       - input_boolean.tracy_present
     to: 'on'
   - platform: state
     entity_id:
       - device_tracker.tracy
       - device_tracker.tracys_iphone
       - device_tracker.tracys_iphone_2
     to: 'home'
  condition:
  - condition: or
    conditions:
      - condition: state
        entity_id: binary_sensor.tracy_presence
        state: 'off'  
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.binary_sensor.tracy_presence.last_changed)) < 60 }}"    
  action:
  - service: timer.start
    entity_id: timer.tracy_just_arrived

- alias: Guests Just Arrived Timer
  trigger:
   - platform: state
     entity_id:
       - group.extra_device_trackers
     to: 'home'
  condition:
  - condition: template
    value_template: "{{ (as_timestamp(now())- as_timestamp(states.group.extra_device_trackers.last_changed)) < 60 }}"
  action:
  - service: timer.start
    entity_id: timer.guests_just_arrived

##########################################
## Reset stuff when people leave       ##
##########################################    

- alias: 'Switch resets when people leave'
  trigger:
   - platform: state
     entity_id:
       - binary_sensor.paul_presence
       - binary_sensor.tracy_presence
       - group.extra_device_trackers
     to: 'off'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  action:
  - service: input_boolean.turn_off
    data_template:
      entity_id: >-
        {% if trigger.entity_id == 'binary_sensor.paul_presence' %}
          input_boolean.paul_present,input_boolean.back_door_opened_for_paul,input_boolean.open_garage_for_paul
        {% elif trigger.entity_id == 'binary_sensor.tracy_presence' %}
          input_boolean.tracy_present,input_boolean.back_door_opened_for_tracy,input_boolean.open_garage_for_tracy
        {% else %}
          input_boolean.back_door_opened_for_guests
        {% endif %}

##########################################
## Lighting Based on states Automations ##
##########################################     
- alias: Motion Lighting in the Office
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_sensor_office_motion
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: group.office_lights
    state: 'off'
  - condition: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    below: 3.0
  action:
  - service: homeassistant.turn_on
    entity_id: group.office_lights
  - wait_template: "{{ is_state('binary_sensor.motion_delay_office', 'off') }}"
  - condition: state
    entity_id: group.office_lights
    state: 'on'
  - service: homeassistant.turn_off
    entity_id: group.office_lights

- alias: Motion Lighting in the Kitchen
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_sensor_kitchen_motion
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: group.kitchen_zwave_lights
    state: 'off'
  - condition: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    below: 3.0
  action:
  - service: homeassistant.turn_on
    entity_id: group.kitchen_zwave_lights
  - wait_template: "{{ is_state('binary_sensor.motion_delay_kitchen', 'off') }}"
  - condition: state
    entity_id: group.kitchen_zwave_lights
    state: 'on'
  - service: homeassistant.turn_off
    entity_id: group.kitchen_zwave_lights

- alias: 'Motion Lighting Garage turn light on'
  trigger:
  - platform: state
    entity_id: binary_sensor.open_close_sensor_garage_door
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.motion_sensor_garage_motion
    from: 'off'
    to: 'on'
  action:
  - service: switch.turn_on
    entity_id: switch.garage_light_indoor

- alias: 'Motion Lighting in the Garage'
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_sensor_garage_motion
    from: 'on'
    to: 'off'
    for:
      minutes: 1
  - platform: state
    entity_id: binary_sensor.open_close_sensor_garage_door
    from: 'on'
    to: 'off' 
  condition:
  - condition: state
    entity_id: binary_sensor.motion_sensor_garage_motion
    state: 'off'
    for:
      minutes: 1
  action:
  - service: switch.turn_off
    entity_id: switch.garage_light_indoor

- alias: Turn on Lava Lamps in FROG after TV turns On
  trigger:
  - platform: state
    entity_id: remote.theater_room_harmony_hub
    to: 'on'
  condition:
  - condition: state
    entity_id: timer.frog_tv_reset
    state: 'idle'
  action:
  - service: switch.turn_on
    data:
      entity_id:
        - switch.lava_lamp_plug
        - switch.lava_lamp_two

- alias: Turn on Lights in FROG after TV turns off
  trigger:
  - platform: state
    entity_id: remote.theater_room_harmony_hub
    to: 'off'
  condition:
  - condition: state
    entity_id: timer.frog_tv_reset
    state: 'idle'
  action:
  - service: light.turn_on
    data:
      entity_id:
        - light.frog_ceiling_light
        - light.frog_fan_light
      brightness_pct: 60
  - service: timer.start
    entity_id: timer.frog_tv_reset
  - delay:
      seconds: 120
  - service: homeassistant.turn_off
    data:
      entity_id:
        - light.frog_ceiling_light
        - light.frog_fan_light
        - switch.lava_lamp_plug
        - switch.lava_lamp_two
        - fan.frog_fan
  - service: script.turn_on
    entity_id: script.theater_room_soundbar_reset
  - delay:
      seconds: 90
  - service: script.turn_on
    entity_id: script.theater_room_harmony_hub_off
    
- alias: Theater Room fan on if warm
  trigger:
  - platform: state
    entity_id: remote.theater_room_harmony_hub
    to: 'on'
  condition:
  - condition: numeric_state
    entity_id: sensor.frog_temperature
    above: 73.0
  - condition: state
    entity_id: timer.frog_tv_reset
    state: 'idle'
  action:
  - service: fan.set_speed
    entity_id: fan.frog_fan
    data:
      speed: low
      
##########################################
## Lighting Based on Sunset/sunrise     ##
##########################################
- alias: 'Outdoor Lights at Sunset'
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    below: 2.0    
  action:
  - service: homeassistant.turn_on
    entity_id: group.outdoor_lights_sunset

- alias: 'Outdoor Lights off at sunrise'
  trigger:
  - platform: sun
    event: sunrise
    offset: "-00:20:00"
  action:
  - service: homeassistant.turn_off
    entity_id: group.outdoor_lights_sunset
  - service: homeassistant.turn_off
    entity_id: switch.back_porch_light
#  - service: automation.turn_off
#    entity_id:
#      - automation.cameras_back_gate_picture
#      - automation.cameras_drive_way_1_picture
#      - automation.cameras_drive_way_2_picture
#      - automation.camera_side_yard_picture

- alias: TV Lighting after sunset if TV is turned on
  trigger:
  - platform: template
    value_template: "{{ states.sun.sun.attributes.elevation < 3 }}"
  - platform: state
    entity_id: remote.living_room_harmony_hub
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: remote.living_room_harmony_hub
    state: 'on'
  - condition: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    below: 4.0  
  action:
  - service: script.turn_on
    entity_id:
      - script.kitchen_tv_lights_hue_scene
      - script.living_room_tv_lights_hue_scene

- alias: TV Evening Lighting after turning TV Off
  trigger:
  - platform: state
    entity_id: remote.living_room_harmony_hub
    from: 'on'
    to: 'off'
  condition:
  - condition: sun
    after: sunset
  - condition: state
    entity_id: input_select.house_mode
    state: 'Home'  
  action:
  - service: script.turn_on
    entity_id:
      - script.kitchen_evening_lights_hue_scene
      - script.living_room_evening_lights_hue_scene

- alias: Turn on lights upon Arrival after sunset
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    from: 'Away'
  condition:
  - condition: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    below: 3.0  
  action:
  - service: script.turn_on
    entity_id:
      - script.kitchen_evening_lights_hue_scene
      - script.living_room_evening_lights_hue_scene

##########################################
## Routines                             ##
##########################################
- alias: Goodbye Routine
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    to: 'Away'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  action:
  - service: cover.close_cover
    entity_id: cover.garage_door_opener
  - service: homeassistant.turn_off
    entity_id:
      - group.goodbye_lights_and_switches
  - service: lock.lock
    entity_id: group.all_locks
  - service: remote.send_command
    data:
      entity_id: remote.living_room_harmony_hub
      command:
         - PowerOff
# sony TV
      device: 48350995
      delay_secs: 0.6
  - service: remote.send_command
    data:
      entity_id: remote.living_room_harmony_hub
      command:
         - Off
# sonos
      device: 54465379
      delay_secs: 0.6
  - service: automation.turn_on
    entity_id:
      - automation.cameras_back_gate_picture
      - automation.cameras_drive_way_1_picture
      - automation.cameras_drive_way_2_picture
      - automation.camera_side_yard_picture
  - service: notify.pushbullet_notifications
    data_template:
      message: "All lights have been turned off. Garage door has closed and locks have been locked"
      target:
      - !secret pauls_secret_email
      title: "Goodbye Routine has ran"
  - condition: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    above: 2.0  
  - service: homeassistant.turn_off
    entity_id:
      - group.outdoor 

- alias: Welcome Back Routine
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    from: 'Away'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1  
  action:
  - service: lock.unlock
    entity_id: lock.lock_garage_door_lock
  - service: homeassistant.turn_on
    entity_id: switch.bedroom_fan
  - service: script.turn_on
    entity_id: script.kitchen_evening_lights_hue_scene     
  - service: automation.turn_off
    entity_id:
      - automation.cameras_back_gate_picture
#      - automation.cameras_drive_way_1_picture
#      - automation.cameras_drive_way_2_picture
#      - automation.camera_side_yard_picture

- alias: 'Good Night Routine'
  trigger:
  - platform: state
    entity_id: input_boolean.goodnight_switch
    from: 'off'
    to: 'on'
    for:
      minutes: 1
  action:
  - service: script.turn_on
    entity_id: script.ecobee_sleep_mode
  - service: homeassistant.turn_off
    entity_id:
      - group.good_night_lights
      - input_boolean.goodnight_switch
      - input_boolean.goodmorning_switch
  - service: homeassistant.turn_on
    entity_id: switch.back_porch_light    
  - service: lock.lock
    entity_id: group.all_locks
  - service: cover.close_cover
    entity_id: cover.garage_door_opener
  - service: input_select.select_option
    data_template:
      entity_id: input_select.security_system
      option: Armed (Home)
  - service: input_select.select_option
    data_template:
      entity_id: input_select.house_mode
      option: Night
  - service: notify.pushbullet_notifications
    data_template:
      message: "Lights off, doors locked, garage closed"
      target:
      - !secret pauls_secret_email
      title: "Good Night Routine Ran"
  - delay:
      seconds: 60
  - service: automation.turn_on
    entity_id:
      - automation.cameras_back_gate_picture
      - automation.cameras_drive_way_1_picture
      - automation.cameras_drive_way_2_picture
      - automation.camera_side_yard_picture

- alias: 'Automatic Goodnight'
  trigger:
  - platform: state
    entity_id: group.indoor_motion_sensors
    from: 'on'
    to: 'off'
    for:
      minutes: 60
  condition:
  - condition: state
    entity_id: input_select.house_mode
    state: Home
  - condition: time
    after: '22:30:00'
    before: '05:00:00'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.goodnight_switch
    
- alias: 'Goodnight Lighting'
  trigger:
  - platform: state
    entity_id: input_boolean.goodnight_switch
    from: 'off'
    to: 'on'
  action:
  - service: light.turn_on
    data:
      entity_id:
        - light.hallway_light
      brightness_pct: 25

- alias: Good Morning Switch
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_sensor_living_room_motion, binary_sensor.motion_sensor_kitchen_motion
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.security_system
    state: 'Armed (Home)'
  - condition: time
    after: '05:00:00'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.goodmorning_switch

- alias: Good Morning Routine
  trigger:
  - platform: state
    entity_id: input_boolean.goodmorning_switch
    to: 'on'
  action:
  - service: script.turn_on
    entity_id:
      - script.ecobee_resume_mode
      - script.kitchen_evening_lights_hue_scene
  - service: lock.unlock
    entity_id: lock.lock_garage_door_lock
  - service: input_select.select_option
    data_template:
      entity_id: input_select.security_system
      option: Disarmed
  - service: input_select.select_option
    data_template:
      entity_id: input_select.house_mode
      option: Home
  - service: input_boolean.turn_off
    entity_id:
      - input_boolean.goodmorning_switch

##########################################
## Door Locking and Unlocking           ##
##########################################
- alias: 'Unlock Back Door for Paul'
  trigger:
  - platform: state
    entity_id: binary_sensor.backyard_line_crossing
    to: 'on'    
  condition:
  - condition: state
    entity_id: timer.paul_just_arrived
    state: 'active'
  - condition: state
    entity_id: input_boolean.back_door_opened_for_paul
    state: 'off'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.back_door_opened_for_paul
  - service: lock.unlock
    entity_id: lock.lock_back_door_lock

- alias: 'Unlock Back Door for Tracy'
  trigger:
  - platform: state
    entity_id: binary_sensor.backyard_line_crossing
    to: 'on'    
  condition:
  - condition: state
    entity_id: timer.tracy_just_arrived
    state: 'active'
  - condition: state
    entity_id: input_boolean.back_door_opened_for_tracy
    state: 'off'  
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.back_door_opened_for_tracy
  - service: lock.unlock
    entity_id: lock.lock_back_door_lock

- alias: 'Unlock Back Door for Guests'
  trigger:
  - platform: state
    entity_id: binary_sensor.backyard_line_crossing
    to: 'on'    
  condition:
  - condition: state
    entity_id: timer.guests_just_arrived
    state: 'active'
  - condition: state
    entity_id: input_boolean.back_door_opened_for_guests
    state: 'off'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.back_door_opened_for_guests
  - service: lock.unlock
    entity_id: lock.lock_back_door_lock

- alias: 'Auto Lock Front Door'
  trigger:
  - platform: state
    entity_id: lock.lock_front_door_lock
    from: 'locked'
    to: 'unlocked'
    for:
      minutes: 5  
  - platform: state
    entity_id: binary_sensor.open_close_sensor_front_door
    from: 'on'
    to: 'off'
    for:
      minutes: 5
  condition:
  - condition: state
    entity_id: binary_sensor.open_close_sensor_front_door
    state: 'off'
    for:
      minutes: 4
  action:
  - service: lock.lock
    entity_id: lock.lock_front_door_lock

- alias: 'Auto unlock Front Door if door is open'
  trigger:
  - platform: state
    entity_id: lock.lock_front_door_lock
    to: 'locked'
  condition:
  - condition: state
    entity_id: binary_sensor.open_close_sensor_front_door
    state: 'on'
    for:
      seconds: 10
  action:
  - service: lock.unlock
    entity_id: lock.lock_front_door_lock

- alias: 'Auto unlock Back Door if door is open'
  trigger:
  - platform: state
    entity_id: lock.lock_back_door_lock
    to: 'locked'
  condition:
  - condition: state
    entity_id: binary_sensor.open_close_sensor_back_door
    state: 'on'
    for:
      seconds: 10
  action:
  - service: lock.unlock
    entity_id: lock.lock_back_door_lock

- alias: Door alert
  trigger:
  - platform: state
    entity_id: input_select.security_system
  - platform: state
    entity_id: binary_sensor.doors_unlocked
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.security_system
    state: 'Armed (Away)'
  - condition: state
    entity_id: binary_sensor.doors_unlocked
    state: 'on'
  action:
  - service: notify.pushbullet_notifications
    data_template:
      message: >
          {% set unlocked = states | selectattr('entity_id', 'in', state_attr('group.all_locks','entity_id')) | selectattr('state','eq','unlocked') | map(attribute='name') | join(', ') %}
          The following locks are unlocked: {{ unlocked }}
      target:
      - !secret pauls_secret_email
      - !secret tracys_secret_email
      title: Doors left unlocked

- alias: Notify who locked door with timestamp when away
  trigger:
  - platform: state
    entity_id:
      - sensor.frontdoor_action
      - sensor.backdoor_action
    to: 'Keypad Lock'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  - condition: state
    entity_id: input_boolean.guests_present
    state: 'on'
  - condition: state
    entity_id: group.primary_presence
    state: 'off'
  action:
  - service: notify.pushbullet_notifications
    data_template:
      message: " At {{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }} " 
      target:
      - !secret pauls_secret_email
      - !secret tracys_secret_email
      title: >
        {{ trigger.to_state.attributes.friendly_name }} locked by {{ states('input_text.last_person_to_unlock') }}
  - service: input_boolean.turn_off
    entity_id: input_boolean.guests_present

# Duplicated elsewhere
#- alias: 'Reset door lock boolean'
#  trigger:
#  - platform: event
#    event_type: timer.finished
#  condition:
#    condition: template
#    value_template: >
#      {{ trigger.event.data.entity_id in ['timer.paul_just_arrived',
#                                          'timer.tracy_just_arrived',
#                                          'timer.guests_just_arrived'] }}
#  action:
#  - service: input_boolean.turn_off
#    data_template:
#      entity_id: >-
#        {% if trigger.event.data.entity_id == 'timer.paul_just_arrived' %}
#          input_boolean.back_door_opened_for_paul
#        {% elif trigger.event.data.entity_id == 'timer.tracy_just_arrived' %}
#          input_boolean.back_door_opened_for_tracy
#        {% else %}
#          input_boolean.back_door_opened_for_guests
#        {% endif %}
#
##########################################
## Security Alerts                      ##
##########################################
- alias: 'Security System - Armed Away Door Opened'
  trigger:
  - platform: state
    entity_id: binary_sensor.open_close_sensor_back_door,binary_sensor.open_close_sensor_front_door,binary_sensor.open_close_sensor_garage_door,binary_sensor.living_room_window_open_close,binary_sensor.office_window_open_close
    from: 'off'
    to: 'on'  
  condition:
  - condition: state
    entity_id: input_select.security_system
    state: 'Armed (Away)'
  action:
  - service: notify.pushbullet_notifications
    data:
      message: "The {{ trigger.to_state.attributes.friendly_name }} just opened and no one is home"
      target:
      - !secret pauls_secret_email
      title: "Security Alert"

- alias: 'Security System - Armed Away Motion Detected'
  trigger:
  - platform: state
    entity_id:
      - binary_sensor.motion_sensor_garage_motion
      - binary_sensor.motion_sensor_office_motion
      - binary_sensor.motion_sensor_living_room_motion
      - binary_sensor.motion_sensor_kitchen_motion
    to: 'on'  
  condition:
  - condition: state
    entity_id: input_select.security_system
    state: 'Armed (Away)'
  action:
  - service: notify.pushbullet_notifications
    data_template:
      message: "Motion Detected by {{ trigger.to_state.attributes.friendly_name }} and no one is home"
      target:
      - !secret pauls_secret_email
      title: "Indoor Motion Alert"  

##########################################
## Garage Door Automations              ##
##########################################
- alias: 'Garage Door For Tracy when she gets home'
  trigger:
   - platform: state
     entity_id:
       - input_boolean.tracy_present
     to: 'on'
   - platform: state
     entity_id:
       - device_tracker.tracy
       - device_tracker.tracys_iphone
       - device_tracker.tracys_iphone_2
     to: 'home' 
  condition:
  - condition: state
    entity_id: input_boolean.open_garage_for_tracy
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.open_garage_for_tracy
  - service: input_boolean.turn_on
    entity_id: input_boolean.garage_changed_with_ha
  - service: cover.open_cover
    entity_id: cover.garage_door_opener

- alias: 'Garage Door For Paul when he gets home'
  trigger:
   - platform: state
     entity_id:
       - input_boolean.paul_present
     to: 'on'
   - platform: state
     entity_id:
       - device_tracker.paul
       - device_tracker.pauls_iphone
       - device_tracker.pauls_iphone_2
     to: 'home'  
  condition:
  - condition: state
    entity_id: input_boolean.open_garage_for_paul
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.open_garage_for_paul
  - service: input_boolean.turn_on
    entity_id: input_boolean.garage_changed_with_ha
  - service: cover.open_cover
    entity_id: cover.garage_door_opener

- alias: 'Garage Door Close with No Motion for Three Minutes'
  trigger:
  - platform: state
    entity_id: input_boolean.garage_changed_with_ha
    from: 'off'
    to: 'on'
    for:
      minutes: 3
  - platform: state
    entity_id: binary_sensor.motion_sensor_garage_motion
    from: 'on'
    to: 'off'
    for:
      minutes: 3
  condition:
  - condition: state 
    entity_id: binary_sensor.motion_sensor_garage_motion
    state: 'off'
    for:
      minutes: 2
  - condition: state
    entity_id: input_boolean.garage_changed_with_ha
    state: 'on'
  action:
  - service: cover.close_cover
    entity_id: cover.garage_door_opener
  - service: input_boolean.turn_off
    entity_id: input_boolean.garage_changed_with_ha

- alias: 'Garage Door opened'
  trigger:
  - platform: state
    entity_id: cover.garage_door_opener
    to: 'open'
  - platform: state
    entity_id: input_select.security_system
  condition:
  - condition: state
    entity_id: input_select.security_system
    state: 'Armed (Away)'
  - condition: state
    entity_id: cover.garage_door_opener
    state: 'open'
  action:
  - service: notify.pushbullet_notifications
    data_template:
      message: "Garage Door has Opened and nobody is home."
      target:
      - !secret pauls_secret_email
      - !secret tracys_secret_email
      title: "Garage Door Status"
      
- alias: 'Garage Door Closed'
  trigger:
  - platform: state
    entity_id: cover.garage_door_opener
    from: 'open'
    to: 'closed'   
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.garage_changed_with_ha
  - service: notify.pushbullet_notifications
    data_template:
      message: "Garage Door has Closed"
      target:
      - !secret pauls_secret_email
      - !secret tracys_secret_email
      title: "Garage Door Status"

##########################################
## Media Automations                    ##
##########################################
- alias: Reset Sonos Volume
  trigger:
  - platform: state
    entity_id: remote.living_room_harmony_hub
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: media_player.living_room
      volume_level: 0.35

- alias: 'Turn off TV if left on after bed'
  trigger:
  - platform: state
    entity_id: group.indoor_motion_sensors
    from: 'on'
    to: 'off'
    for:
      minutes: 30
  condition:
  - condition: state
    entity_id: input_select.house_mode
    state: 'Night' 
  - condition: time
    after: '22:30:00'
    before: '05:00:00'
  action:
  - service: remote.turn_off
    entity_id: remote.living_room_harmony_hub

##########################################
## Alerts                               ##
##########################################
- alias: "Notify if HA Device Offline"
  trigger:
    - platform: state
      entity_id:
        - device_tracker.ecobee_downstairs
        - device_tracker.ecobee_upstairs
        - device_tracker.front_doorbell_camera
        - device_tracker.harmony_hub_living_room
        - device_tracker.harmonyhub_frog
        - device_tracker.hue_hub
        - device_tracker.office_pc
        - device_tracker.plexserver
        - device_tracker.slingbox
        - device_tracker.sonos_sub_living_room
        - device_tracker.sonosplaybar_living_room
        - device_tracker.sony_tv_living_room
        - device_tracker.tivomini_theater_room
      from: 'home'
      to: 'not_home'
  action:
  - service: notify.pushbullet_notifications
    data_template:
      message: "{{ trigger.to_state.attributes.friendly_name }} is offline"
      target:
      - !secret pauls_secret_email
      title: "Device Offline"      

##########################################
## Time to Leave for work Alert         ##
##########################################
- alias: "Notify Paul when its time to leave for work"
  trigger:
  - platform: state
    entity_id: sensor.time_to_leave_for_caci
    to: 'True'
    from: 'False'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1    
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: time
    weekday:
      - mon
      - wed
      - thu
      - fri
  action:
  - service: script.audio_notify
    data_template:
      tts_msg: "Based on current traffic, you have 10 minutes to leave if you want to get to khaki by 8:30am.  Traffic is {{ states('sensor.pauls_traffic_density_to_caci') }} today."
      mplayer: "main"

- alias: "Notify Paul when its time to leave for base"
  trigger:
  - platform: state
    entity_id: sensor.time_to_leave_for_navy_base
    to: 'True'
    from: 'False'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1    
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: time
    weekday:
      - tue
  action:
  - service: script.audio_notify
    data_template:
      tts_msg: "Based on current traffic, you have 10 minutes to leave if you want to get the Navy base by 8:30am.  Traffic is {{ states('sensor.pauls_traffic_density_to_base') }} today."
      mplayer: "main"
      
- alias: "Notify Tracy when its time to leave for work"
  trigger:
  - platform: state
    entity_id: sensor.time_to_leave_for_avis
    to: 'True'
    from: 'False'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1    
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: or
    conditions:
      - condition: state
        entity_id: sensor.tracys_traffic_density_to_avis
        state: 'Moderate'
      - condition: state
        entity_id: sensor.tracys_traffic_density_to_avis
        state: 'Heavy'
  action:
  - service: notify.pushbullet_notifications
    data_template:
      message: "Based on current traffic, you have about 10 minutes to leave if you want to be to work by 7:30am"
      target:
      - !secret tracys_secret_email
      title: "Traffic is heavier than usual!"

- alias: Set alcove light color based on Traffic to CACI
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    from: 'Night'
  - platform: state
    entity_id: sensor.pauls_traffic_density_to_caci
  - platform: time
    at: '07:35:00'
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: time
    weekday:
      - mon
      - wed
      - thu
      - fri
  - condition: state
    entity_id: input_select.house_mode
    state: Home
  - condition: time
    after: '07:35:00'
    before: '08:35:00'
  action:
  - service: light.turn_on
    data_template:
      entity_id: light.alcove_light
      brightness_pct: 100
      color_name: >
        {% set map = {'Normal': 'green', 'Moderate': 'orange', 'Heavy': 'red'} %}
        {% set state = states('sensor.pauls_traffic_density_to_caci') %}
        {{ map[state] if state in map else 'white' }}

- alias: Set alcove light color based on Traffic to Base
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    from: 'Night'
  - platform: state
    entity_id: sensor.pauls_traffic_density_to_base
  - platform: time
    at: '07:35:00'
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: time
    weekday:
      - tue
  - condition: state
    entity_id: input_select.house_mode
    state: Home
  - condition: time
    after: '07:35:00'
    before: '08:35:00'
  action:
  - service: light.turn_on
    data_template:
      entity_id: light.alcove_light
      brightness_pct: 100
      color_name: >
        {% set map = {'Normal': 'green', 'Moderate': 'orange', 'Heavy': 'red'} %}
        {% set state = states('sensor.pauls_traffic_density_to_base') %}
        {{ map[state] if state in map else 'white' }}

- alias: Set alcove light color based on Traffic to AVIS
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    from: 'Night'
  - platform: state
    entity_id: sensor.tracys_traffic_density_to_avis
  - platform: time
    at: '06:35:00'
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: input_select.house_mode
    state: Home
  - condition: time
    after: '06:35:00'
    before: '07:34:00'
  action:
  - service: light.turn_on
    data_template:
      entity_id: light.alcove_light
      brightness_pct: 100
      color_name: >
        {% set map = {'Normal': 'green', 'Moderate': 'orange', 'Heavy': 'red'} %}
        {% set state = states('sensor.tracys_traffic_density_to_avis') %}
        {{ map[state] if state in map else 'white' }}

##########################################
## Commute Time Logger                  ##
##########################################
- alias: "Leave any zone"
  trigger:
  - platform: state
    entity_id: device_tracker.paul
    to: 'not_home'
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.commute_start_time
      value: '{{ as_timestamp(now()) }}'
  - service: input_text.set_value
    data_template:
      entity_id: input_text.commute_start_zone
      value: '{{ trigger.from_state.state }}'

- alias: "Enter any zone"
  trigger:
  - platform: state
    entity_id: device_tracker.paul
    from: 'not_home'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1    
  - condition: template
    value_template: "{{ states('input_text.commute_start_zone') != states('device_tracker.paul') }}"
  action:
  - service: ifttt.trigger
    data_template:
      event: CommuteLog
      value1: '{{ states("input_text.commute_start_zone") }}'
      value2: '{{ states("device_tracker.paul") }}'
      value3: '{{ ((as_timestamp(now()) - (states("input_number.commute_start_time")|int))/60)|round }}'
  - service: notify.pushbullet_notifications
    data_template:
      message: "Your commute from {{ states('input_text.commute_start_zone') }} to {{ states('device_tracker.paul') }} took {{ ((as_timestamp(now()) - (states('input_number.commute_start_time')|int))/60)|round }} minutes"
      target:
      - !secret pauls_secret_email
      title: "Commute Logged"

- alias: "Tracy Leaving Location Alert"
  trigger:
  - platform: state
    entity_id: device_tracker.tracy
    to: 'not_home'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  action:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.commute_start_zone_tracy
      value: '{{ trigger.from_state.state }}'
  - service: notify.pushbullet_notifications
    data_template:
      message: "Tracy left {{ states('input_text.commute_start_zone_tracy') }} at {{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }}"
      target:
      - !secret pauls_secret_email
      title: "Location Alert"

- alias: "Tracy Arriving at Location Alert"
  trigger:
  - platform: state
    entity_id: device_tracker.tracy
    from: 'not_home'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  action:
  - service: notify.pushbullet_notifications
    data_template:
      message: "Tracy arrived at {{ states('device_tracker.tracy') }} at {{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }}"
      target:
      - !secret pauls_secret_email
      title: "Location Alert"

##########################################
## Roku Key Mapping for Harmony         ##
##########################################
- alias: "Roku to turn on and off Fireplace with Harmony"
  trigger:
  - platform: event
    event_type: roku_command
    event_data:
#      roku_usn: sSMJFc3BXnTfjPAPHiY5gb
      type: keypress
      key: Fwd
  action:
  - service: homeassistant.toggle
    entity_id: switch.fireplace

##########################################
## Camera Picture Alerts                ##
##########################################    
#- alias: 'Cameras Drive Way 1 Picture'
#  trigger:
#  - platform: state
#    entity_id: binary_sensor.driveway_1_motion
#    to: 'on'
#  condition:
#  - condition: template
#    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_drive_way_1_picture.attributes.last_triggered) | int > 60 }}'
#  - condition: or
#    conditions:
#      - condition: template
#        value_template: "{{ (as_timestamp(now())- as_timestamp(states.binary_sensor.driveway_2_line_crossing.last_changed)) < 15 }}" 
#      - condition: template
#        value_template: "{{ (as_timestamp(now())- as_timestamp(states.binary_sensor.driveway_1_line_crossing.last_changed)) < 15 }}"
#  action:
#  - delay: '00:00:01'
#  - service: script.turn_on
#    entity_id:
#       - script.capture_frontdoor_camera
##       - script.capture_driveway1_camera
#  - delay: '00:00:04'
#  - service: notify.pushbullet_notifications
#    data_template:
#      message: "{{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }}" 
#      target:
#      - !secret pauls_secret_email
#      - !secret tracys_secret_email
#      title: Motion at Front Door
#      data:
#        file: "/tmp/frontdoor.jpg"
##  - delay: '00:00:02'
##  - service: notify.pushbullet_notifications
##    data_template:
##      message: "{{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }}" 
##      target:
##      - !secret pauls_secret_email
##      - !secret tracys_secret_email
##      title: Drive Way Line Crossing (Driveway 1)
##      data:
##        file: "/tmp/driveway1.jpg"
#
#- alias: 'Cameras Drive Way 2 Picture'
#  trigger:
#  - platform: state
#    entity_id: binary_sensor.driveway_2_line_crossing
#    to: 'on'
#  condition:
#  - condition: template
#    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_drive_way_2_picture.attributes.last_triggered) | int > 60 }}'
#  - condition: template
#    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_drive_way_1_picture.attributes.last_triggered) | int > 60 }}'
#  action:
#  - service: script.turn_on
#    entity_id: script.capture_driveway2_camera
#  - delay: '00:00:04'
#  - service: notify.pushbullet_notifications
#    data_template:
#      message: "{{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }}" 
#      target:
#      - !secret pauls_secret_email
#      - !secret tracys_secret_email
#      title: Drive Way Line Crossing from the Half Street
#      data:
#        file: "/tmp/driveway2.jpg"
#
##########################################
## Camera Picture Alerts                ##
##########################################    
#- alias: 'Cameras Drive Way 1 Picture'
#  trigger:
#  - platform: state
#    entity_id: binary_sensor.driveway_1_motion
#    to: 'on'
#  condition:
#  - condition: template
#    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_drive_way_1_picture.attributes.last_triggered) | int > 60 }}'
#  - condition: or
#    conditions:
#      - condition: template
#        value_template: "{{ (as_timestamp(now())- as_timestamp(states.binary_sensor.driveway_2_line_crossing.last_changed)) < 15 }}" 
#      - condition: template
#        value_template: "{{ (as_timestamp(now())- as_timestamp(states.binary_sensor.driveway_1_line_crossing.last_changed)) < 15 }}"
#  action:
#  - delay: '00:00:01'
#  - service: script.turn_on
#    entity_id:
#       - script.capture_frontdoor_camera
#       - script.capture_driveway1_camera
#	   - script.capture_driveway2_camera
#  - delay: '00:00:04'
#  - service: notify.gmail_paul
#    data:
#      title: 'Motion at Front Door'
#      message: "{{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }}" 
#      data:
#        images:
#          - /tmp/frontdoor.jpg
#          - /tmp/driveway2.jpg

- alias: 'Cameras Drive Way 1 Picture'
  trigger:
  - platform: state
    entity_id: binary_sensor.driveway_1_line_crossing
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_drive_way_2_picture.attributes.last_triggered) | int > 30 }}'
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_drive_way_1_picture.attributes.last_triggered) | int > 30 }}'
  action:
  - service: script.turn_on
    entity_id: script.capture_driveway1_camera
  - delay: '00:00:01'
  - service: script.turn_on
    entity_id: script.capture_frontdoor_camera
  - delay: '00:00:03'
  - service: script.turn_on
    entity_id: script.capture_driveway2_camera
  - delay: '00:00:04'
  - service: notify.gmail_paul
    data:
      title: 'Driveway Alert'
      message: "{{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }}" 
      data:
        images:
          - /tmp/driveway1.jpg
          - /tmp/frontdoor.jpg
          - /tmp/driveway2.jpg
  - service: notify.gmail_paul_sms
    data:
      title: 'Driveway Alert'
      message: "{{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }}" 
      data:
        images:
          - /tmp/frontdoor.jpg

- alias: 'Cameras Drive Way 2 Picture'
  trigger:
  - platform: state
    entity_id: binary_sensor.driveway_2_line_crossing
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_drive_way_2_picture.attributes.last_triggered) | int > 30 }}'
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_drive_way_1_picture.attributes.last_triggered) | int > 30 }}'
  action:
  - service: script.turn_on
    entity_id: script.capture_driveway2_camera
  - delay: '00:00:03'
  - service: script.turn_on
    entity_id: script.capture_frontdoor_camera
  - service: script.turn_on
    entity_id: script.capture_driveway1_camera
  - delay: '00:00:04'
  - service: notify.gmail_paul
    data:
      title: 'Driveway Alert'
      message: "{{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }}" 
      data:
        images:
          - /tmp/driveway2.jpg
          - /tmp/frontdoor.jpg
          - /tmp/driveway1.jpg

- alias: 'Cameras Back Gate Picture'
  trigger:
  - platform: state
    entity_id: binary_sensor.backyard_line_crossing
    to: 'on'    
  condition:
  - condition: state
    entity_id: binary_sensor.open_close_sensor_back_door
    state: 'off'
    for:
      minutes: 2
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_back_gate_picture.attributes.last_triggered) | int > 30 }}'      
  action:
  - service: script.turn_on
    entity_id: script.capture_backgate_camera
  - delay: '00:00:04'
  - service: notify.pushbullet_notifications
    data_template:
      message: "{{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }}" 
      target:
      - !secret pauls_secret_email
      - !secret tracys_secret_email      
      title: Gate Crossing Notification
      data:
        file: "/tmp/backgate.jpg"

- alias: 'Camera Side Yard Picture'
  trigger:
  - platform: state
    entity_id: binary_sensor.sideyard_line_crossing
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.cameras_side_yard_picture.attributes.last_triggered) | int > 60 }}'
  action:
  - service: script.turn_on
    entity_id: script.capture_sideyard_camera
  - delay: '00:00:04'
  - service: notify.pushbullet_notifications
    data_template:
      message: "{{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} on {{ now().strftime('%d %b %Y') }}" 
      target:
      - !secret pauls_secret_email
      - !secret tracys_secret_email      
      title: Side yard Line Crossing
      data:
        file: "/tmp/sideyard.jpg"
      
#######################################
## Alexa Notifications               ##
#######################################
- alias: Garage State Notification
  trigger:
  - platform: state
    entity_id: cover.garage_door_opener
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  action:
  - service: script.audio_notify
    data_template:
      tts_msg: "The {{ trigger.to_state.attributes.friendly_name }} is: {{ trigger.to_state.state }}"
      mplayer: "kitchen"

- alias: Doors or windows opened when Armed
  trigger:
  - platform: state
    entity_id: binary_sensor.open_close_sensor_back_door,binary_sensor.open_close_sensor_front_door,binary_sensor.open_close_sensor_garage_door,binary_sensor.living_room_window_open_close,binary_sensor.office_window_open_close
    to: 'on'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  - condition: state
    entity_id: input_select.security_system
    state: 'Armed (Home)'
  action:
  - service: script.audio_notify
    data_template:
      tts_msg: "The {{ trigger.to_state.attributes.friendly_name }} has been opened."
      mplayer: "bedroom_spot"
  - service: notify.pushbullet_notifications
    data_template:
      message: "The {{ trigger.to_state.attributes.friendly_name }} just opened after goodnight ran."
      target:
      - !secret pauls_secret_email
      title: "Security Alert"

- alias: Doors or windows left opened
  trigger:
    platform: state
    entity_id: binary_sensor.open_close_sensor_back_door,binary_sensor.open_close_sensor_front_door,binary_sensor.open_close_sensor_garage_door,binary_sensor.living_room_window_open_close,binary_sensor.office_window_open_close
    to: 'on'
    for:
      minutes: 3
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  - condition: state
    entity_id: group.primary_presence
    state: 'on'
  action:
  - service: script.audio_notify
    data_template:
      tts_msg: "The {{ trigger.to_state.attributes.friendly_name }} is open"
      mplayer: "main"

- alias: Water Leak Detected
  trigger:
  - platform: state
    entity_id: binary_sensor.water_sensor_attic,binary_sensor.water_sensor_kitchen
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  action:
  - service: script.audio_notify
    data_template:
      tts_msg: >-
        The {{ trigger.to_state.name }} is:
          {%- if trigger.to_state.state in ['on', 'off'] -%}
            {{ {'on': ' Detected a leak.', 'off': ' leak has cleared.'}[trigger.to_state.state] }}
          {%- else -%}
            {{ ' unknown' }}
          {%- endif %}
      mplayer: "all"
  - service: notify.pushbullet_notifications
    data_template:
      message: >-
        The {{ trigger.to_state.name }} is:
          {%- if trigger.to_state.state in ['on', 'off'] -%}
            {{ {'on': ' Detected a leak.', 'off': ' leak has cleared.'}[trigger.to_state.state] }}
          {%- else -%}
            {{ ' unknown' }}
          {%- endif %}
      target:
      - !secret pauls_secret_email
      - !secret tracys_secret_email      
      title: "Leak Alert" 

- alias: Tracy Travel Notice
  trigger:
  - platform: state
    entity_id: device_tracker.tracy
    to: 'not_home'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  - condition: state
    entity_id: binary_sensor.paul_presence
    state: 'on'
  - condition: template
    value_template: "{{ trigger.from_state.state != 'home' }}"
  action:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.commute_start_zone_tracy
      value: '{{ trigger.from_state.state }}'
  - service: script.audio_notify
    data_template:
      tts_msg: "Tracy left {{ states('input_text.commute_start_zone_tracy') }} at {{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} and should be home in approximately {{ states('sensor.tracys_time_to_home') }} minutes."
      mplayer: "main"

#######################################
## Ecobee Automations                ##
#######################################
- alias: Set Ecobee to Away (Weekdays Only)
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    to: 'Away'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.ecobee_away_mode

- alias: Set Ecobee to Home
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    to: 'Home'
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1  
  action:
  - service: script.turn_on
    entity_id: script.ecobee_home_mode

- alias: "Resume ecobee Program from away"
  trigger:
    - platform: time
      at: '12:00'
    - platform: time
      at: '14:00'
  condition:
  - condition: state
    entity_id: input_select.house_mode
    state: 'Away'
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  action:
    service: climate.ecobee_resume_program

- alias: "Resume ecobee Program from Home"
  trigger:
    - platform: time
      at: '17:30'
    - platform: time
      at: '19:00'
  condition:
  - condition: state
    entity_id: input_select.house_mode
    state: 'Home' 
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.ha_runtime_in_minutes
    above: 1
  action:
    service: climate.ecobee_resume_program
      
#- alias: Turn Hue Lights to Normal
#  trigger:
#  - platform: state
#    entity_id: light.all_hue_lights
#    to: 'on'
#  condition:
#  - condition: template
#    value_template: "{{ states.light.all_hue_lights.attributes.rgb_color != '(255,200,118)' }}"
#  action:
#  - delay: 00:00:10
#  - service: light.turn_on
#    entity_id: light.all_hue_lights
#    data:
#      brightness: 254
#      rgb_color: [255,200,118]